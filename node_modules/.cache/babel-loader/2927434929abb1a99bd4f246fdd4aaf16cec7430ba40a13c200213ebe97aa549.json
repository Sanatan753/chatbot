{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\testi\\\\OneDrive\\\\Documents\\\\Portfolio\\\\chatbot\\\\src\\\\CreativeFields.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // Import the useNavigate hook\nimport \"./CreativeFields.css\"; // Optional: For styling\n\n// Importing images for each field\nimport writingImage from './images/Writing.png';\nimport musicImage from './images/Music.png';\nimport digitalArtImage from './images/Digital-Art.png';\nimport videographyImage from './images/Videography.png';\nimport photographyImage from './images/Photography.png';\nimport animationImage from './images/Animation.jpg';\nimport sketchingImage from './images/Sketching.png';\nimport gameDevImage from './images/Game-development.png';\n\n// Defining the fields array\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fields = [{\n  id: 1,\n  name: \"Writing\",\n  description: \"Explore the world of storytelling and literature.\",\n  background: writingImage\n}, {\n  id: 2,\n  name: \"Music\",\n  description: \"Create melodies, beats, and compositions.\",\n  background: musicImage\n}, {\n  id: 3,\n  name: \"Digital Art\",\n  description: \"Design stunning visuals and digital artwork.\",\n  background: digitalArtImage\n}, {\n  id: 4,\n  name: \"Videography\",\n  description: \"Dive into filmmaking and video production.\",\n  background: videographyImage\n}, {\n  id: 5,\n  name: \"Photography\",\n  description: \"Capture moments and tell stories through photos.\",\n  background: photographyImage\n}, {\n  id: 6,\n  name: \"Animation\",\n  description: \"Bring characters and scenes to life through animation.\",\n  background: animationImage\n}, {\n  id: 7,\n  name: \"Sketching\",\n  description: \"Learning the Fundamentals of sketching.\",\n  background: sketchingImage\n}, {\n  id: 8,\n  name: \"Game Development\",\n  description: \"Build and design interactive games.\",\n  background: gameDevImage\n}];\nfunction CreativeFields() {\n  _s();\n  const navigate = useNavigate(); // Initialize useNavigate hook\n\n  const handleFieldClick = async field => {\n    try {\n      // Make a POST request to the backend\n      const response = await fetch(\"http://127.0.0.1:5000/process-field\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          field: field.name\n        })\n      });\n      if (!response.ok) {\n        // Handle server errors with detailed message\n        const errorDetails = await response.text();\n        throw new Error(`Server Error: ${response.status} - ${errorDetails}`);\n      }\n      const data = await response.json();\n\n      // Redirect to Chatbot page and pass data as state\n      navigate(\"/chatbot\", {\n        state: {\n          selectedField: field.name,\n          response: data.message\n        }\n      });\n    } catch (error) {\n      console.error(\"Error:\", error);\n      alert(`Something went wrong: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"creative-fields\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Choose Your Creative Field\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fields-grid\",\n      children: fields.map(field => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `field-card field-card-${field.id}`,\n        onClick: () => handleFieldClick(field),\n        style: {\n          backgroundImage: `url(${field.background})`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: field.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: field.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, field.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(CreativeFields, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = CreativeFields;\nexport default CreativeFields;\nvar _c;\n$RefreshReg$(_c, \"CreativeFields\");","map":{"version":3,"names":["React","useNavigate","writingImage","musicImage","digitalArtImage","videographyImage","photographyImage","animationImage","sketchingImage","gameDevImage","jsxDEV","_jsxDEV","fields","id","name","description","background","CreativeFields","_s","navigate","handleFieldClick","field","response","fetch","method","headers","body","JSON","stringify","ok","errorDetails","text","Error","status","data","json","state","selectedField","message","error","console","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","style","backgroundImage","_c","$RefreshReg$"],"sources":["C:/Users/testi/OneDrive/Documents/Portfolio/chatbot/src/CreativeFields.js"],"sourcesContent":["import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";  // Import the useNavigate hook\r\nimport \"./CreativeFields.css\"; // Optional: For styling\r\n\r\n// Importing images for each field\r\nimport writingImage from './images/Writing.png';\r\nimport musicImage from './images/Music.png';\r\nimport digitalArtImage from './images/Digital-Art.png';\r\nimport videographyImage from './images/Videography.png';\r\nimport photographyImage from './images/Photography.png';\r\nimport animationImage from './images/Animation.jpg';\r\nimport sketchingImage from './images/Sketching.png';\r\nimport gameDevImage from './images/Game-development.png';\r\n\r\n// Defining the fields array\r\nconst fields = [\r\n  { id: 1, name: \"Writing\", description: \"Explore the world of storytelling and literature.\", background: writingImage },\r\n  { id: 2, name: \"Music\", description: \"Create melodies, beats, and compositions.\", background: musicImage },\r\n  { id: 3, name: \"Digital Art\", description: \"Design stunning visuals and digital artwork.\", background: digitalArtImage },\r\n  { id: 4, name: \"Videography\", description: \"Dive into filmmaking and video production.\", background: videographyImage },\r\n  { id: 5, name: \"Photography\", description: \"Capture moments and tell stories through photos.\", background: photographyImage },\r\n  { id: 6, name: \"Animation\", description: \"Bring characters and scenes to life through animation.\", background: animationImage },\r\n  { id: 7, name: \"Sketching\", description: \"Learning the Fundamentals of sketching.\", background: sketchingImage },\r\n  { id: 8, name: \"Game Development\", description: \"Build and design interactive games.\", background: gameDevImage },\r\n];\r\n\r\nfunction CreativeFields() {\r\n  const navigate = useNavigate();  // Initialize useNavigate hook\r\n\r\n  const handleFieldClick = async (field) => {\r\n    try {\r\n      // Make a POST request to the backend\r\n      const response = await fetch(\"http://127.0.0.1:5000/process-field\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ field: field.name }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        // Handle server errors with detailed message\r\n        const errorDetails = await response.text();\r\n        throw new Error(`Server Error: ${response.status} - ${errorDetails}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      // Redirect to Chatbot page and pass data as state\r\n      navigate(\"/chatbot\", {\r\n        state: { selectedField: field.name, response: data.message },\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      alert(`Something went wrong: ${error.message}`);\r\n    }    \r\n  };\r\n\r\n  return (\r\n    <div className=\"creative-fields\">\r\n      <h1>Choose Your Creative Field</h1>\r\n      <div className=\"fields-grid\">\r\n        {fields.map((field) => (\r\n          <div\r\n            key={field.id}\r\n            className={`field-card field-card-${field.id}`}\r\n            onClick={() => handleFieldClick(field)}\r\n            style={{ backgroundImage: `url(${field.background})` }}\r\n          >\r\n            <h2>{field.name}</h2>\r\n            <p>{field.description}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreativeFields;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}